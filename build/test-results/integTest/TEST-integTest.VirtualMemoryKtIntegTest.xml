<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="integTest.VirtualMemoryKtIntegTest" tests="9" skipped="0" failures="1" errors="0" timestamp="2020-10-16T20:46:27" hostname="maria-TM1701" time="0.089">
  <properties/>
  <testcase name="big example()" classname="integTest.VirtualMemoryKtIntegTest" time="0.055"/>
  <testcase name="with some invalid calls()" classname="integTest.VirtualMemoryKtIntegTest" time="0.003"/>
  <testcase name="incorrect format of RAM size()" classname="integTest.VirtualMemoryKtIntegTest" time="0.002"/>
  <testcase name="incorrect number of lines()" classname="integTest.VirtualMemoryKtIntegTest" time="0.002"/>
  <testcase name="small example()" classname="integTest.VirtualMemoryKtIntegTest" time="0.002"/>
  <testcase name="only invalid calls()" classname="integTest.VirtualMemoryKtIntegTest" time="0.001"/>
  <testcase name="not existing file()" classname="integTest.VirtualMemoryKtIntegTest" time="0.014">
    <failure message="org.opentest4j.AssertionFailedError: expected: &lt;[File dddd processing result, java.io.FileNotFoundException: dddd (Нет такого файла или каталога), , ]&gt; but was: &lt;[File dddd processing result:, java.io.FileNotFoundException: dddd (Нет такого файла или каталога), , ]&gt;" type="org.opentest4j.AssertionFailedError">org.opentest4j.AssertionFailedError: expected: &lt;[File dddd processing result, java.io.FileNotFoundException: dddd (Нет такого файла или каталога), , ]&gt; but was: &lt;[File dddd processing result:, java.io.FileNotFoundException: dddd (Нет такого файла или каталога), , ]&gt;
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:195)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:184)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:179)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1124)
	at integTest.VirtualMemoryKtIntegTest.not existing file(VirtualMemoryKtIntegTest.kt:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:628)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:117)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:184)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:180)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:127)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.util.ArrayList.forEach(ArrayList.java:1259)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.util.ArrayList.forEach(ArrayList.java:1259)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="some files()" classname="integTest.VirtualMemoryKtIntegTest" time="0.005"/>
  <testcase name="incorrect format of address space()" classname="integTest.VirtualMemoryKtIntegTest" time="0.002"/>
  <system-out><![CDATA[File data/example5.txt processing result:
There were invalid calls in the call sequence. These calls will be ignored.

This is the result of the algorithm FIFO: [1*, +, 2*, 3*, 1, 2, +, 3, 1]
This is the result of the algorithm LRU: [1*, +, 2*, 3*, 1, 2, +, 1, +]
This is the result of the algorithm OPT: [1*, +, 2*, 3*, 1, 1, +, +, +]

Algorithms sorted by the number of answers of the second type:
OPT: 5
LRU: 6
FIFO: 7


File data/example6.txt processing result:
There were invalid calls in the call sequence. These calls will be ignored.

This is the result of the algorithm FIFO: [1*, 2*, 3*, 1, 2, 3, 1, 2]
This is the result of the algorithm LRU: [1*, 2*, 3*, 1, 2, 3, 1, 2]
This is the result of the algorithm OPT: [1*, 2*, 3*, 3, +, +, 2, 2]

Algorithms sorted by the number of answers of the second type:
OPT: 6
FIFO: 8
LRU: 8


File data/example1.txt processing result:
me.maria.IncorrectFormat: RAM size is not in the correct format in line 2 in file data/example1.txt. Natural number is expected.


File data/example3.txt processing result:
me.maria.IncorrectFormat: Expected exactly 3 lines in file data/example3.txt


File data/example4.txt processing result:
This is the result of the algorithm FIFO: [1*, +, 1, 1, 1, 1]
This is the result of the algorithm LRU: [1*, +, 1, 1, 1, 1]
This is the result of the algorithm OPT: [1*, +, 1, 1, 1, 1]

Algorithms sorted by the number of answers of the second type:
FIFO: 5
LRU: 5
OPT: 5


File data/example7.txt processing result:
me.maria.IncorrectFormat: Sequence of requests has not valid calls in line 3 in file data/example7.txt. Sequence of natural number is expected.


File dddd processing result:
java.io.FileNotFoundException: dddd (Нет такого файла или каталога)


File data/example1.txt processing result:
me.maria.IncorrectFormat: RAM size is not in the correct format in line 2 in file data/example1.txt. Natural number is expected.


File data/example4.txt processing result:
This is the result of the algorithm FIFO: [1*, +, 1, 1, 1, 1]
This is the result of the algorithm LRU: [1*, +, 1, 1, 1, 1]
This is the result of the algorithm OPT: [1*, +, 1, 1, 1, 1]

Algorithms sorted by the number of answers of the second type:
FIFO: 5
LRU: 5
OPT: 5


File data/example6.txt processing result:
There were invalid calls in the call sequence. These calls will be ignored.

This is the result of the algorithm FIFO: [1*, 2*, 3*, 1, 2, 3, 1, 2]
This is the result of the algorithm LRU: [1*, 2*, 3*, 1, 2, 3, 1, 2]
This is the result of the algorithm OPT: [1*, 2*, 3*, 3, +, +, 2, 2]

Algorithms sorted by the number of answers of the second type:
OPT: 6
FIFO: 8
LRU: 8


File xxxxxx processing result:
java.io.FileNotFoundException: xxxxxx (Нет такого файла или каталога)


File data/example2.txt processing result:
me.maria.IncorrectFormat: Process address space size is not in the correct format in line 1 in file data/example2.txt. Natural number is expected.


]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
